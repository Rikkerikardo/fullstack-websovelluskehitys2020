{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Koulu\\\\Desktop\\\\Fullstack\\\\fullstack-websovelluskehitys2020\\\\osa7\\\\bloglist-frontend\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Blog from \"./components/Blog\";\nimport blogService from \"./services/blogs\";\nimport loginService from \"./services/login\";\nimport BlogForm from \"./components/BlogForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport Togglable from \"./components/Togglable\";\nimport Notification from \"./components/Notification\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setNotification } from \"./reducers/notificationReducer\";\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogappUser\");\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem(\"loggedBlogappUser\", JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {\n      dispatch(setNotification(\"wrong credentials\"));\n    }\n  };\n\n  const addBlog = blogObject => {\n    blogService.create(blogObject).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog));\n      dispatch(setNotification(`a new blog ${blogObject.title} by ${blogObject.author} added`));\n    });\n  };\n\n  const addLike = id => {\n    const blog = blogs.find(b => b.id === id);\n    const changedBlog = { ...blog,\n      likes: blog.likes + 1\n    };\n    blogService.update(blog.id, changedBlog).then(updatedBlog => {\n      setBlogs(blogs.map(blog => blog.id !== id ? blog : updatedBlog));\n    }).catch(error => {\n      dispatch(setNotification(`Blog '${blog.title}' was already removed from server`));\n    });\n  };\n\n  const remove = blog => {\n    if (window.confirm(`Delete ${blog.title}?`)) {\n      blogService.remove(blog.id).then(updatedBlogs => {\n        setBlogs(updatedBlogs);\n        dispatch(setNotification(`blog removed`));\n      });\n    }\n  };\n\n  const logout = () => {\n    window.localStorage.clear();\n    setUser(null);\n    setPassword(\"\");\n  };\n\n  const blogForm = () => React.createElement(Togglable, {\n    buttonLabel: \"new blog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(BlogForm, {\n    createBlog: addBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }));\n\n  const loginForm = () => React.createElement(Togglable, {\n    buttonLabel: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(LoginForm, {\n    username: username,\n    password: password,\n    handleUsernameChange: ({\n      target\n    }) => setUsername(target.value),\n    handlePasswordChange: ({\n      target\n    }) => setPassword(target.value),\n    handleSubmit: handleLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Blogs\"), React.createElement(Notification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Login\"), user === null ? loginForm() : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, user.name, \" logged in\", \" \", React.createElement(\"button\", {\n    onClick: () => logout(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"logout\")), blogForm(), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"All blogs\"), blogs.sort((a, b) => b.likes - a.likes).map((blog, index) => React.createElement(Blog, {\n    key: index,\n    blog: blog,\n    addLike: () => addLike(blog.id),\n    remove: () => remove(blog),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Koulu/Desktop/Fullstack/fullstack-websovelluskehitys2020/osa7/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","blogService","loginService","BlogForm","LoginForm","Togglable","Notification","useDispatch","useSelector","setNotification","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","dispatch","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","setItem","stringify","exception","addBlog","blogObject","create","returnedBlog","concat","title","author","addLike","id","blog","find","b","changedBlog","likes","update","updatedBlog","map","catch","error","remove","confirm","updatedBlogs","logout","clear","blogForm","loginForm","target","value","name","sort","a","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport Blog from \"./components/Blog\"\r\nimport blogService from \"./services/blogs\"\r\nimport loginService from \"./services/login\"\r\nimport BlogForm from \"./components/BlogForm\"\r\nimport LoginForm from \"./components/LoginForm\"\r\nimport Togglable from \"./components/Togglable\"\r\nimport Notification from \"./components/Notification\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { setNotification } from \"./reducers/notificationReducer\"\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [user, setUser] = useState(null)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then((blogs) => setBlogs(blogs))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogappUser\")\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username,\r\n        password\r\n      })\r\n      window.localStorage.setItem(\"loggedBlogappUser\", JSON.stringify(user))\r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername(\"\")\r\n      setPassword(\"\")\r\n    } catch (exception) {\r\n      dispatch(setNotification(\"wrong credentials\"))\r\n    }\r\n  }\r\n\r\n  const addBlog = (blogObject) => {\r\n    blogService.create(blogObject).then((returnedBlog) => {\r\n      setBlogs(blogs.concat(returnedBlog))\r\n      dispatch(\r\n        setNotification(\r\n          `a new blog ${blogObject.title} by ${blogObject.author} added`\r\n        )\r\n      )\r\n    })\r\n  }\r\n\r\n  const addLike = (id) => {\r\n    const blog = blogs.find((b) => b.id === id)\r\n    const changedBlog = { ...blog, likes: blog.likes + 1 }\r\n\r\n    blogService\r\n      .update(blog.id, changedBlog)\r\n      .then((updatedBlog) => {\r\n        setBlogs(blogs.map((blog) => (blog.id !== id ? blog : updatedBlog)))\r\n      })\r\n      .catch((error) => {\r\n        dispatch(\r\n          setNotification(\r\n            `Blog '${blog.title}' was already removed from server`\r\n          )\r\n        )\r\n      })\r\n  }\r\n\r\n  const remove = (blog) => {\r\n    if (window.confirm(`Delete ${blog.title}?`)) {\r\n      blogService.remove(blog.id).then((updatedBlogs) => {\r\n        setBlogs(updatedBlogs)\r\n        dispatch(setNotification(`blog removed`))\r\n      })\r\n    }\r\n  }\r\n\r\n  const logout = () => {\r\n    window.localStorage.clear()\r\n    setUser(null)\r\n    setPassword(\"\")\r\n  }\r\n\r\n  const blogForm = () => (\r\n    <Togglable buttonLabel=\"new blog\">\r\n      <BlogForm createBlog={addBlog} />\r\n    </Togglable>\r\n  )\r\n\r\n  const loginForm = () => (\r\n    <Togglable buttonLabel=\"login\">\r\n      <LoginForm\r\n        username={username}\r\n        password={password}\r\n        handleUsernameChange={({ target }) => setUsername(target.value)}\r\n        handlePasswordChange={({ target }) => setPassword(target.value)}\r\n        handleSubmit={handleLogin}\r\n      />\r\n    </Togglable>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <h1>Blogs</h1>\r\n\r\n      <Notification />\r\n\r\n      <h2>Login</h2>\r\n      {user === null ? (\r\n        loginForm()\r\n      ) : (\r\n        <div>\r\n          <p>\r\n            {user.name} logged in{\" \"}\r\n            <button onClick={() => logout()}>logout</button>\r\n          </p>\r\n\r\n          {blogForm()}\r\n\r\n          <h2>All blogs</h2>\r\n          {blogs\r\n            .sort((a, b) => b.likes - a.likes)\r\n            .map((blog, index) => (\r\n              <Blog\r\n                key={index}\r\n                blog={blog}\r\n                addLike={() => addLike(blog.id)}\r\n                remove={() => remove(blog)}\r\n              />\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}