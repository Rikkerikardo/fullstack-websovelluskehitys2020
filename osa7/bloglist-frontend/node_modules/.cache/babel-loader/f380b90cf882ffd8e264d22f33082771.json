{"ast":null,"code":"import commentService from \"../services/comment\";\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case \"INIT_COMMENTS\":\n      return action.data;\n\n    case \"NEW_COMMENT\":\n      return [...state, action.content];\n\n    default:\n      return state;\n  }\n};\n\nexport const newComment = (id, content) => {\n  return async dispatch => {\n    const comment = await commentService.create(id, content);\n    dispatch({\n      type: \"NEW_COMMENT\",\n      content: comment\n    });\n  };\n};\nexport const initializeComments = id => {\n  return async dispatch => {\n    const comments = await commentService.getAll(id);\n    dispatch({\n      type: \"INIT_COMMENTS\",\n      data: comments\n    });\n  };\n};\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Koulu/Desktop/Fullstack/fullstack-websovelluskehitys2020/osa7/bloglist-frontend/src/reducers/commentReducer.js"],"names":["commentService","reducer","state","action","type","data","content","newComment","id","dispatch","comment","create","initializeComments","comments","getAll"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,qBAA3B;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAOD,MAAM,CAACE,IAAd;;AACF,SAAK,aAAL;AACE,aAAO,CAAC,GAAGH,KAAJ,EAAWC,MAAM,CAACG,OAAlB,CAAP;;AACF;AACE,aAAOJ,KAAP;AANJ;AAQD,CATD;;AAWA,OAAO,MAAMK,UAAU,GAAG,CAACC,EAAD,EAAKF,OAAL,KAAiB;AACzC,SAAO,MAAOG,QAAP,IAAoB;AACzB,UAAMC,OAAO,GAAG,MAAMV,cAAc,CAACW,MAAf,CAAsBH,EAAtB,EAA0BF,OAA1B,CAAtB;AACAG,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAE,aADC;AAEPE,MAAAA,OAAO,EAAEI;AAFF,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAME,kBAAkB,GAAIJ,EAAD,IAAQ;AACxC,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMI,QAAQ,GAAG,MAAMb,cAAc,CAACc,MAAf,CAAsBN,EAAtB,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAE,eADC;AAEPC,MAAAA,IAAI,EAAEQ;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,eAAeZ,OAAf","sourcesContent":["import commentService from \"../services/comment\"\r\n\r\nconst reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"INIT_COMMENTS\":\r\n      return action.data\r\n    case \"NEW_COMMENT\":\r\n      return [...state, action.content]\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const newComment = (id, content) => {\r\n  return async (dispatch) => {\r\n    const comment = await commentService.create(id, content)\r\n    dispatch({\r\n      type: \"NEW_COMMENT\",\r\n      content: comment\r\n    })\r\n  }\r\n}\r\n\r\nexport const initializeComments = (id) => {\r\n  return async (dispatch) => {\r\n    const comments = await commentService.getAll(id)\r\n    dispatch({\r\n      type: \"INIT_COMMENTS\",\r\n      data: comments\r\n    })\r\n  }\r\n}\r\n\r\nexport default reducer\r\n"]},"metadata":{},"sourceType":"module"}