{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"/api/blogs\";\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async newObject => {\n  token = `bearer ${localStorage.getItem(\"token\")}`;\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst update = (id, newObject) => {\n  const response = axios.put(`${baseUrl}/${id}`, newObject);\n  return response.then(response => response.data);\n};\n\nconst remove = async id => {\n  token = `bearer ${localStorage.getItem(\"token\")}`;\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nconst addLike = async blog => {\n  const changedBlog = { ...blog,\n    likes: blog.likes + 1\n  };\n  const response = await axios.put(`${baseUrl}/${blog.id}`, changedBlog);\n  return response.data;\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  setToken,\n  remove,\n  addLike\n};","map":{"version":3,"sources":["C:/Users/Koulu/Desktop/Fullstack/fullstack-websovelluskehitys2020/osa7/bloglist-frontend/src/services/blogs.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","response","get","data","create","newObject","localStorage","getItem","config","headers","Authorization","post","update","id","put","then","remove","delete","addLike","blog","changedBlog","likes"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC7BF,EAAAA,KAAK,GAAI,UAASE,QAAS,EAA3B;AACD,CAFD;;AAIA,MAAMC,MAAM,GAAG,YAAY;AACzB,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAvB;AACA,SAAOK,QAAQ,CAACE,IAAhB;AACD,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAOC,SAAP,IAAqB;AAClCR,EAAAA,KAAK,GAAI,UAASS,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EAAhD;AACA,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADI,GAAf;AAIA,QAAMI,QAAQ,GAAG,MAAMN,KAAK,CAACgB,IAAN,CAAWf,OAAX,EAAoBS,SAApB,EAA+BG,MAA/B,CAAvB;AACA,SAAOP,QAAQ,CAACE,IAAhB;AACD,CARD;;AAUA,MAAMS,MAAM,GAAG,CAACC,EAAD,EAAKR,SAAL,KAAmB;AAChC,QAAMJ,QAAQ,GAAGN,KAAK,CAACmB,GAAN,CAAW,GAAElB,OAAQ,IAAGiB,EAAG,EAA3B,EAA8BR,SAA9B,CAAjB;AACA,SAAOJ,QAAQ,CAACc,IAAT,CAAed,QAAD,IAAcA,QAAQ,CAACE,IAArC,CAAP;AACD,CAHD;;AAKA,MAAMa,MAAM,GAAG,MAAOH,EAAP,IAAc;AAC3BhB,EAAAA,KAAK,GAAI,UAASS,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EAAhD;AACA,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADI,GAAf;AAIA,QAAMI,QAAQ,GAAG,MAAMN,KAAK,CAACsB,MAAN,CAAc,GAAErB,OAAQ,IAAGiB,EAAG,EAA9B,EAAiCL,MAAjC,CAAvB;AACA,SAAOP,QAAQ,CAACE,IAAhB;AACD,CARD;;AAUA,MAAMe,OAAO,GAAG,MAAOC,IAAP,IAAgB;AAC9B,QAAMC,WAAW,GAAG,EAClB,GAAGD,IADe;AAElBE,IAAAA,KAAK,EAAEF,IAAI,CAACE,KAAL,GAAa;AAFF,GAApB;AAIA,QAAMpB,QAAQ,GAAG,MAAMN,KAAK,CAACmB,GAAN,CAAW,GAAElB,OAAQ,IAAGuB,IAAI,CAACN,EAAG,EAAhC,EAAmCO,WAAnC,CAAvB;AACA,SAAOnB,QAAQ,CAACE,IAAhB;AACD,CAPD;;AASA,eAAe;AAAEH,EAAAA,MAAF;AAAUI,EAAAA,MAAV;AAAkBQ,EAAAA,MAAlB;AAA0Bd,EAAAA,QAA1B;AAAoCkB,EAAAA,MAApC;AAA4CE,EAAAA;AAA5C,CAAf","sourcesContent":["import axios from \"axios\"\r\nconst baseUrl = \"/api/blogs\"\r\n\r\nlet token = null\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async (newObject) => {\r\n  token = `bearer ${localStorage.getItem(\"token\")}`\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const response = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return response.then((response) => response.data)\r\n}\r\n\r\nconst remove = async (id) => {\r\n  token = `bearer ${localStorage.getItem(\"token\")}`\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nconst addLike = async (blog) => {\r\n  const changedBlog = {\r\n    ...blog,\r\n    likes: blog.likes + 1\r\n  }\r\n  const response = await axios.put(`${baseUrl}/${blog.id}`, changedBlog)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, create, update, setToken, remove, addLike }\r\n"]},"metadata":{},"sourceType":"module"}