{"ast":null,"code":"import loginService from \"../services/login\";\nimport blogService from \"../services/blogs\";\nconst initialState = {\n  username: localStorage.getItem(\"user\"),\n  isLoggedIn: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"LOGGED_USER\":\n      return { ...state,\n        username: action.data.username,\n        isLoggedIn: true\n      };\n\n    case \"LOG_OUT\":\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport const login = credentials => {\n  return async dispatch => {\n    const user = await loginService.login(credentials);\n    await blogService.setToken(user.token);\n    localStorage.setItem(\"user\", user);\n    dispatch({\n      type: \"LOGGED_USER\",\n      data: user\n    });\n  };\n};\nexport const logOut = () => {\n  return dispatch => {\n    dispatch({\n      type: \"LOG_OUT\"\n    });\n  };\n};\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Koulu/Desktop/Fullstack/fullstack-websovelluskehitys2020/osa7/bloglist-frontend/src/reducers/loggedUserReducer.js"],"names":["loginService","blogService","initialState","username","localStorage","getItem","isLoggedIn","reducer","state","action","type","data","login","credentials","dispatch","user","setToken","token","setItem","logOut"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,mBAAzB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,MAArB,CADS;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYL,QAAAA,QAAQ,EAAEM,MAAM,CAACE,IAAP,CAAYR,QAAlC;AAA4CG,QAAAA,UAAU,EAAE;AAAxD,OAAP;;AACF,SAAK,SAAL;AACE,aAAOJ,YAAP;;AACF;AACE,aAAOM,KAAP;AANJ;AAQD,CATD;;AAWA,OAAO,MAAMI,KAAK,GAAIC,WAAD,IAAiB;AACpC,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,IAAI,GAAG,MAAMf,YAAY,CAACY,KAAb,CAAmBC,WAAnB,CAAnB;AACA,UAAMZ,WAAW,CAACe,QAAZ,CAAqBD,IAAI,CAACE,KAA1B,CAAN;AACAb,IAAAA,YAAY,CAACc,OAAb,CAAqB,MAArB,EAA6BH,IAA7B;AACAD,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,IAAI,EAAEI;AAFC,KAAD,CAAR;AAID,GARD;AASD,CAVM;AAYP,OAAO,MAAMI,MAAM,GAAG,MAAM;AAC1B,SAAQL,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GAJD;AAKD,CANM;AAQP,eAAeH,OAAf","sourcesContent":["import loginService from \"../services/login\"\r\nimport blogService from \"../services/blogs\"\r\n\r\nconst initialState = {\r\n  username: localStorage.getItem(\"user\"),\r\n  isLoggedIn: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGGED_USER\":\r\n      return { ...state, username: action.data.username, isLoggedIn: true }\r\n    case \"LOG_OUT\":\r\n      return initialState\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const login = (credentials) => {\r\n  return async (dispatch) => {\r\n    const user = await loginService.login(credentials)\r\n    await blogService.setToken(user.token)\r\n    localStorage.setItem(\"user\", user)\r\n    dispatch({\r\n      type: \"LOGGED_USER\",\r\n      data: user\r\n    })\r\n  }\r\n}\r\n\r\nexport const logOut = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"LOG_OUT\"\r\n    })\r\n  }\r\n}\r\n\r\nexport default reducer\r\n"]},"metadata":{},"sourceType":"module"}