{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Koulu\\\\Desktop\\\\Fullstack\\\\fullstack-websovelluskehitys2020\\\\osa7\\\\bloglist-frontend\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Blog from \"./components/Blog\";\nimport blogService from \"./services/blogs\";\nimport loginService from \"./services/login\";\nimport BlogForm from \"./components/BlogForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport Togglable from \"./components/Togglable\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogappUser\");\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n  /*   const Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    return <div className=\"error\">{message}</div>\r\n  } */\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem(\"loggedBlogappUser\", JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {\n      setErrorMessage(\"wrong credentials\");\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const addBlog = blogObject => {\n    blogService.create(blogObject).then(returnedBlog => {\n      console.log(\"new blog\", returnedBlog);\n      setBlogs(blogs.concat(returnedBlog));\n      console.log(\"all blogs\", blogs);\n      setMessage(`a new blog ${blogObject.title} by ${blogObject.author} added`);\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n    });\n  };\n\n  const addLike = id => {\n    const blog = blogs.find(b => b.id === id);\n    const changedBlog = { ...blog,\n      likes: blog.likes + 1\n    };\n    blogService.update(blog.id, changedBlog).then(updatedBlog => {\n      setBlogs(blogs.map(blog => blog.id !== id ? blog : updatedBlog));\n    }).catch(error => {\n      setErrorMessage(`Blog '${blog.title}' was already removed from server`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    });\n  };\n\n  const remove = blog => {\n    if (window.confirm(`Delete ${blog.title}?`)) {\n      blogService.remove(blog.id).then(updatedBlogs => {\n        setBlogs(updatedBlogs);\n        setMessage(`blog removed`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n    }\n  };\n\n  const logout = () => {\n    window.localStorage.clear();\n    setUser(null);\n    setPassword(\"\");\n  };\n\n  const blogForm = () => React.createElement(Togglable, {\n    buttonLabel: \"new blog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(BlogForm, {\n    createBlog: addBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }));\n\n  const loginForm = () => React.createElement(Togglable, {\n    buttonLabel: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(LoginForm, {\n    username: username,\n    password: password,\n    handleUsernameChange: ({\n      target\n    }) => setUsername(target.value),\n    handlePasswordChange: ({\n      target\n    }) => setPassword(target.value),\n    handleSubmit: handleLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Blogs\"), React.createElement(Notification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Login\"), user === null ? loginForm() : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, user.name, \" logged in\", \" \", React.createElement(\"button\", {\n    onClick: () => logout(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"logout\")), blogForm(), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"All blogs\"), blogs.sort((a, b) => b.likes - a.likes).map((blog, index) => React.createElement(Blog, {\n    key: index,\n    blog: blog,\n    addLike: () => addLike(blog.id),\n    remove: () => remove(blog),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Koulu/Desktop/Fullstack/fullstack-websovelluskehitys2020/osa7/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","blogService","loginService","BlogForm","LoginForm","Togglable","Notification","App","errorMessage","setErrorMessage","message","setMessage","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","setItem","stringify","exception","setTimeout","addBlog","blogObject","create","returnedBlog","console","log","concat","title","author","addLike","id","blog","find","b","changedBlog","likes","update","updatedBlog","map","catch","error","remove","confirm","updatedBlogs","logout","clear","blogForm","loginForm","target","value","name","sort","a","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,WAAW,CAACmB,MAAZ,GAAqBC,IAArB,CAA2BT,KAAD,IAAWC,QAAQ,CAACD,KAAD,CAA7C;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,cAAc,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,CAAvB;;AACA,QAAIH,cAAJ,EAAoB;AAClB,YAAMJ,IAAI,GAAGQ,IAAI,CAACC,KAAL,CAAWL,cAAX,CAAb;AACAH,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAjB,MAAAA,WAAW,CAAC2B,QAAZ,CAAqBV,IAAI,CAACW,KAA1B;AACD;AACF,GAPQ,EAON,EAPM,CAAT;AASA;;;;;;;AAOA,QAAMC,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACnCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI;AACF,YAAMd,IAAI,GAAG,MAAMhB,YAAY,CAAC+B,KAAb,CAAmB;AACpCnB,QAAAA,QADoC;AAEpCE,QAAAA;AAFoC,OAAnB,CAAnB;AAIAO,MAAAA,MAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4B,mBAA5B,EAAiDR,IAAI,CAACS,SAAL,CAAejB,IAAf,CAAjD;AACAjB,MAAAA,WAAW,CAAC2B,QAAZ,CAAqBV,IAAI,CAACW,KAA1B;AACAV,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAH,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KAVD,CAUE,OAAOmB,SAAP,EAAkB;AAClB3B,MAAAA,eAAe,CAAC,mBAAD,CAAf;AACA4B,MAAAA,UAAU,CAAC,MAAM;AACf5B,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GAlBD;;AAoBA,QAAM6B,OAAO,GAAIC,UAAD,IAAgB;AAC9BtC,IAAAA,WAAW,CAACuC,MAAZ,CAAmBD,UAAnB,EAA+BlB,IAA/B,CAAqCoB,YAAD,IAAkB;AACpDC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,YAAxB;AACA5B,MAAAA,QAAQ,CAACD,KAAK,CAACgC,MAAN,CAAaH,YAAb,CAAD,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB/B,KAAzB;AACAD,MAAAA,UAAU,CAAE,cAAa4B,UAAU,CAACM,KAAM,OAAMN,UAAU,CAACO,MAAO,QAAxD,CAAV;AACAT,MAAAA,UAAU,CAAC,MAAM;AACf1B,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KARD;AASD,GAVD;;AAYA,QAAMoC,OAAO,GAAIC,EAAD,IAAQ;AACtB,UAAMC,IAAI,GAAGrC,KAAK,CAACsC,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACH,EAAF,KAASA,EAA3B,CAAb;AACA,UAAMI,WAAW,GAAG,EAAE,GAAGH,IAAL;AAAWI,MAAAA,KAAK,EAAEJ,IAAI,CAACI,KAAL,GAAa;AAA/B,KAApB;AAEApD,IAAAA,WAAW,CACRqD,MADH,CACUL,IAAI,CAACD,EADf,EACmBI,WADnB,EAEG/B,IAFH,CAESkC,WAAD,IAAiB;AACrB1C,MAAAA,QAAQ,CAACD,KAAK,CAAC4C,GAAN,CAAWP,IAAD,IAAWA,IAAI,CAACD,EAAL,KAAYA,EAAZ,GAAiBC,IAAjB,GAAwBM,WAA7C,CAAD,CAAR;AACD,KAJH,EAKGE,KALH,CAKUC,KAAD,IAAW;AAChBjD,MAAAA,eAAe,CAAE,SAAQwC,IAAI,CAACJ,KAAM,mCAArB,CAAf;AACAR,MAAAA,UAAU,CAAC,MAAM;AACf5B,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KAVH;AAWD,GAfD;;AAiBA,QAAMkD,MAAM,GAAIV,IAAD,IAAU;AACvB,QAAI1B,MAAM,CAACqC,OAAP,CAAgB,UAASX,IAAI,CAACJ,KAAM,GAApC,CAAJ,EAA6C;AAC3C5C,MAAAA,WAAW,CAAC0D,MAAZ,CAAmBV,IAAI,CAACD,EAAxB,EAA4B3B,IAA5B,CAAkCwC,YAAD,IAAkB;AACjDhD,QAAAA,QAAQ,CAACgD,YAAD,CAAR;AACAlD,QAAAA,UAAU,CAAE,cAAF,CAAV;AACA0B,QAAAA,UAAU,CAAC,MAAM;AACf1B,UAAAA,UAAU,CAAC,IAAD,CAAV;AACD,SAFS,EAEP,IAFO,CAAV;AAGD,OAND;AAOD;AACF,GAVD;;AAYA,QAAMmD,MAAM,GAAG,MAAM;AACnBvC,IAAAA,MAAM,CAACC,YAAP,CAAoBuC,KAApB;AACA5C,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAF,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAJD;;AAMA,QAAM+C,QAAQ,GAAG,MACf,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAE1B,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;;AAMA,QAAM2B,SAAS,GAAG,MAChB,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAEnD,QADZ;AAEE,IAAA,QAAQ,EAAEE,QAFZ;AAGE,IAAA,oBAAoB,EAAE,CAAC;AAAEkD,MAAAA;AAAF,KAAD,KAAgBnD,WAAW,CAACmD,MAAM,CAACC,KAAR,CAHnD;AAIE,IAAA,oBAAoB,EAAE,CAAC;AAAED,MAAAA;AAAF,KAAD,KAAgBjD,WAAW,CAACiD,MAAM,CAACC,KAAR,CAJnD;AAKE,IAAA,YAAY,EAAErC,WALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;;AAYA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,EAMGZ,IAAI,KAAK,IAAT,GACC+C,SAAS,EADV,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG/C,IAAI,CAACkD,IADR,gBACwB,GADxB,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMN,MAAM,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,EAMGE,QAAQ,EANX,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,EASGpD,KAAK,CACHyD,IADF,CACO,CAACC,CAAD,EAAInB,CAAJ,KAAUA,CAAC,CAACE,KAAF,GAAUiB,CAAC,CAACjB,KAD7B,EAEEG,GAFF,CAEM,CAACP,IAAD,EAAOsB,KAAP,KACH,oBAAC,IAAD;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,IAAI,EAAEtB,IAFR;AAGE,IAAA,OAAO,EAAE,MAAMF,OAAO,CAACE,IAAI,CAACD,EAAN,CAHxB;AAIE,IAAA,MAAM,EAAE,MAAMW,MAAM,CAACV,IAAD,CAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,CATH,CATJ,CADF;AAiCD,CAlJD;;AAoJA,eAAe1C,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport Blog from \"./components/Blog\"\r\nimport blogService from \"./services/blogs\"\r\nimport loginService from \"./services/login\"\r\nimport BlogForm from \"./components/BlogForm\"\r\nimport LoginForm from \"./components/LoginForm\"\r\nimport Togglable from \"./components/Togglable\"\r\nimport Notification from \"./components/Notification\"\r\n\r\nconst App = () => {\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [message, setMessage] = useState(null)\r\n  const [blogs, setBlogs] = useState([])\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [user, setUser] = useState(null)\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then((blogs) => setBlogs(blogs))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogappUser\")\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  /*   const Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    return <div className=\"error\">{message}</div>\r\n  } */\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username,\r\n        password\r\n      })\r\n      window.localStorage.setItem(\"loggedBlogappUser\", JSON.stringify(user))\r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername(\"\")\r\n      setPassword(\"\")\r\n    } catch (exception) {\r\n      setErrorMessage(\"wrong credentials\")\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const addBlog = (blogObject) => {\r\n    blogService.create(blogObject).then((returnedBlog) => {\r\n      console.log(\"new blog\", returnedBlog)\r\n      setBlogs(blogs.concat(returnedBlog))\r\n      console.log(\"all blogs\", blogs)\r\n      setMessage(`a new blog ${blogObject.title} by ${blogObject.author} added`)\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    })\r\n  }\r\n\r\n  const addLike = (id) => {\r\n    const blog = blogs.find((b) => b.id === id)\r\n    const changedBlog = { ...blog, likes: blog.likes + 1 }\r\n\r\n    blogService\r\n      .update(blog.id, changedBlog)\r\n      .then((updatedBlog) => {\r\n        setBlogs(blogs.map((blog) => (blog.id !== id ? blog : updatedBlog)))\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessage(`Blog '${blog.title}' was already removed from server`)\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n      })\r\n  }\r\n\r\n  const remove = (blog) => {\r\n    if (window.confirm(`Delete ${blog.title}?`)) {\r\n      blogService.remove(blog.id).then((updatedBlogs) => {\r\n        setBlogs(updatedBlogs)\r\n        setMessage(`blog removed`)\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n        }, 5000)\r\n      })\r\n    }\r\n  }\r\n\r\n  const logout = () => {\r\n    window.localStorage.clear()\r\n    setUser(null)\r\n    setPassword(\"\")\r\n  }\r\n\r\n  const blogForm = () => (\r\n    <Togglable buttonLabel=\"new blog\">\r\n      <BlogForm createBlog={addBlog} />\r\n    </Togglable>\r\n  )\r\n\r\n  const loginForm = () => (\r\n    <Togglable buttonLabel=\"login\">\r\n      <LoginForm\r\n        username={username}\r\n        password={password}\r\n        handleUsernameChange={({ target }) => setUsername(target.value)}\r\n        handlePasswordChange={({ target }) => setPassword(target.value)}\r\n        handleSubmit={handleLogin}\r\n      />\r\n    </Togglable>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <h1>Blogs</h1>\r\n\r\n      <Notification />\r\n\r\n      <h2>Login</h2>\r\n      {user === null ? (\r\n        loginForm()\r\n      ) : (\r\n        <div>\r\n          <p>\r\n            {user.name} logged in{\" \"}\r\n            <button onClick={() => logout()}>logout</button>\r\n          </p>\r\n\r\n          {blogForm()}\r\n\r\n          <h2>All blogs</h2>\r\n          {blogs\r\n            .sort((a, b) => b.likes - a.likes)\r\n            .map((blog, index) => (\r\n              <Blog\r\n                key={index}\r\n                blog={blog}\r\n                addLike={() => addLike(blog.id)}\r\n                remove={() => remove(blog)}\r\n              />\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}