{"ast":null,"code":"import loginService from \"../services/login\";\nimport blogService from \"../services/blogs\";\nconst initialState = {\n  username: \"\",\n  isLoggedIn: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"LOGGED_USER\":\n      return { ...state,\n        username: action.data.username,\n        isLoggedIn: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const login = credentials => {\n  return async dispatch => {\n    const user = await loginService.login(credentials);\n    /* await blogService.setToken(user.token) */\n\n    dispatch({\n      type: \"LOGGED_USER\",\n      data: user\n    });\n  };\n};\nexport const logOut = content => {\n  return async dispatch => {\n    const newBlog = await blogService.create(content);\n    dispatch({\n      type: \"NEW_BLOG\",\n      content: newBlog\n    });\n  };\n};\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Koulu/Desktop/Fullstack/fullstack-websovelluskehitys2020/osa7/bloglist-frontend/src/reducers/loggedUserReducer.js"],"names":["loginService","blogService","initialState","username","isLoggedIn","reducer","state","action","type","data","login","credentials","dispatch","user","logOut","content","newBlog","create"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,mBAAzB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYH,QAAAA,QAAQ,EAAEI,MAAM,CAACE,IAAP,CAAYN,QAAlC;AAA4CC,QAAAA,UAAU,EAAE;AAAxD,OAAP;;AACF;AACE,aAAOE,KAAP;AAJJ;AAMD,CAPD;;AASA,OAAO,MAAMI,KAAK,GAAIC,WAAD,IAAiB;AACpC,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,IAAI,GAAG,MAAMb,YAAY,CAACU,KAAb,CAAmBC,WAAnB,CAAnB;AACA;;AACAC,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,IAAI,EAAEI;AAFC,KAAD,CAAR;AAID,GAPD;AAQD,CATM;AAWP,OAAO,MAAMC,MAAM,GAAIC,OAAD,IAAa;AACjC,SAAO,MAAOH,QAAP,IAAoB;AACzB,UAAMI,OAAO,GAAG,MAAMf,WAAW,CAACgB,MAAZ,CAAmBF,OAAnB,CAAtB;AACAH,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE,UADC;AAEPO,MAAAA,OAAO,EAAEC;AAFF,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,eAAeX,OAAf","sourcesContent":["import loginService from \"../services/login\"\r\nimport blogService from \"../services/blogs\"\r\n\r\nconst initialState = {\r\n  username: \"\",\r\n  isLoggedIn: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGGED_USER\":\r\n      return { ...state, username: action.data.username, isLoggedIn: true }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const login = (credentials) => {\r\n  return async (dispatch) => {\r\n    const user = await loginService.login(credentials)\r\n    /* await blogService.setToken(user.token) */\r\n    dispatch({\r\n      type: \"LOGGED_USER\",\r\n      data: user\r\n    })\r\n  }\r\n}\r\n\r\nexport const logOut = (content) => {\r\n  return async (dispatch) => {\r\n    const newBlog = await blogService.create(content)\r\n    dispatch({\r\n      type: \"NEW_BLOG\",\r\n      content: newBlog\r\n    })\r\n  }\r\n}\r\n\r\nexport default reducer\r\n"]},"metadata":{},"sourceType":"module"}