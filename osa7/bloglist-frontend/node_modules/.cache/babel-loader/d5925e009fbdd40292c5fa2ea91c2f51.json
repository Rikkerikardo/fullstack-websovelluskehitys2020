{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport notificationReducer from \"./reducers/notificationReducer\";\nimport blogReducer, { initializeBlogs } from \"./reducers/blogReducer\";\nimport blogService from \"./services/blogs\";\nimport loggedUserReducer from \"./reducers/loggedUserReducer\";\nimport allUserReducer from \"./reducers/allUserReducer\";\nimport commentReducer from \"./reducers/commentReducer\";\nconst reducer = combineReducers({\n  blogs: blogReducer,\n  notification: notificationReducer,\n  user: loggedUserReducer,\n  allUsers: allUserReducer,\n  comments: commentReducer\n});\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\nblogService.getAll().then(blogs => {\n  store.dispatch(initializeBlogs(blogs));\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/Koulu/Desktop/Fullstack/fullstack-websovelluskehitys2020/osa7/bloglist-frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","composeWithDevTools","thunk","notificationReducer","blogReducer","initializeBlogs","blogService","loggedUserReducer","allUserReducer","commentReducer","reducer","blogs","notification","user","allUsers","comments","store","getAll","then","dispatch"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,OAAOC,WAAP,IAAsBC,eAAtB,QAA6C,wBAA7C;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AAEA,MAAMC,OAAO,GAAGX,eAAe,CAAC;AAC9BY,EAAAA,KAAK,EAAEP,WADuB;AAE9BQ,EAAAA,YAAY,EAAET,mBAFgB;AAG9BU,EAAAA,IAAI,EAAEN,iBAHwB;AAI9BO,EAAAA,QAAQ,EAAEN,cAJoB;AAK9BO,EAAAA,QAAQ,EAAEN;AALoB,CAAD,CAA/B;AAQA,MAAMO,KAAK,GAAGlB,WAAW,CAACY,OAAD,EAAUT,mBAAmB,CAACD,eAAe,CAACE,KAAD,CAAhB,CAA7B,CAAzB;AAEAI,WAAW,CAACW,MAAZ,GAAqBC,IAArB,CAA2BP,KAAD,IAAW;AACnCK,EAAAA,KAAK,CAACG,QAAN,CAAed,eAAe,CAACM,KAAD,CAA9B;AACD,CAFD;AAIA,eAAeK,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport thunk from \"redux-thunk\"\r\nimport notificationReducer from \"./reducers/notificationReducer\"\r\nimport blogReducer, { initializeBlogs } from \"./reducers/blogReducer\"\r\nimport blogService from \"./services/blogs\"\r\nimport loggedUserReducer from \"./reducers/loggedUserReducer\"\r\nimport allUserReducer from \"./reducers/allUserReducer\"\r\nimport commentReducer from \"./reducers/commentReducer\"\r\n\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  notification: notificationReducer,\r\n  user: loggedUserReducer,\r\n  allUsers: allUserReducer,\r\n  comments: commentReducer\r\n})\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nblogService.getAll().then((blogs) => {\r\n  store.dispatch(initializeBlogs(blogs))\r\n})\r\n\r\nexport default store\r\n"]},"metadata":{},"sourceType":"module"}