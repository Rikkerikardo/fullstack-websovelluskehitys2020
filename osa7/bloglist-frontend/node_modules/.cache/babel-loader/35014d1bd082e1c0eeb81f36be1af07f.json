{"ast":null,"code":"import blogService from \"../services/blogs\";\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case \"INIT_BLOGS\":\n      return action.data;\n\n    case \"NEW_BLOG\":\n      return [...state, action.content];\n\n    case \"LIKE_BLOG\":\n      return state;\n\n    case \"DELETE_BLOG\":\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport const newBlog = content => {\n  return async dispatch => {\n    const newBlog = await blogService.createNew(content);\n    dispatch({\n      type: \"NEW_BLOG\",\n      content: newBlog\n    });\n  };\n};\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll();\n    dispatch({\n      type: \"INIT_BLOGS\",\n      data: blogs\n    });\n  };\n};\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Koulu/Desktop/Fullstack/fullstack-websovelluskehitys2020/osa7/bloglist-frontend/src/reducers/blogReducer.js"],"names":["blogService","reducer","state","action","type","data","content","newBlog","dispatch","createNew","initializeBlogs","blogs","getAll"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAOD,MAAM,CAACE,IAAd;;AACF,SAAK,UAAL;AACE,aAAO,CAAC,GAAGH,KAAJ,EAAWC,MAAM,CAACG,OAAlB,CAAP;;AACF,SAAK,WAAL;AACE,aAAOJ,KAAP;;AACF,SAAK,aAAL;AACE,aAAOA,KAAP;;AACF;AACE,aAAOA,KAAP;AAVJ;AAYD,CAbD;;AAeA,OAAO,MAAMK,OAAO,GAAID,OAAD,IAAa;AAClC,SAAO,MAAOE,QAAP,IAAoB;AACzB,UAAMD,OAAO,GAAG,MAAMP,WAAW,CAACS,SAAZ,CAAsBH,OAAtB,CAAtB;AACAE,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE,UADC;AAEPE,MAAAA,OAAO,EAAEC;AAFF,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAMG,eAAe,GAAG,MAAM;AACnC,SAAO,MAAOF,QAAP,IAAoB;AACzB,UAAMG,KAAK,GAAG,MAAMX,WAAW,CAACY,MAAZ,EAApB;AACAJ,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE,YADC;AAEPC,MAAAA,IAAI,EAAEM;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,eAAeV,OAAf","sourcesContent":["import blogService from \"../services/blogs\"\r\n\r\nconst reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"INIT_BLOGS\":\r\n      return action.data\r\n    case \"NEW_BLOG\":\r\n      return [...state, action.content]\r\n    case \"LIKE_BLOG\":\r\n      return state\r\n    case \"DELETE_BLOG\":\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const newBlog = (content) => {\r\n  return async (dispatch) => {\r\n    const newBlog = await blogService.createNew(content)\r\n    dispatch({\r\n      type: \"NEW_BLOG\",\r\n      content: newBlog\r\n    })\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async (dispatch) => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: \"INIT_BLOGS\",\r\n      data: blogs\r\n    })\r\n  }\r\n}\r\n\r\nexport default reducer\r\n"]},"metadata":{},"sourceType":"module"}