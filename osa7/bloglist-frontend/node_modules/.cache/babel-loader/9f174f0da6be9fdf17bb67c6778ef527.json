{"ast":null,"code":"const initialState = null;\n\nconst notificationReducer = (state = initialState, action) => {\n  console.log(\"state\", state);\n\n  switch (action.type) {\n    case \"CLEAR_NOTIFICATION\":\n      return { ...initialState\n      };\n\n    case \"NEW_NOTIFICATION\":\n      return action.data.content;\n\n    default:\n      return state;\n  }\n};\n\nexport const setNotification = (content, timeout) => {\n  return async dispatch => {\n    dispatch({\n      type: \"NEW_NOTIFICATION\",\n      data: {\n        content\n      }\n    });\n    var timerID;\n    console.log(\"timerID\", timerID);\n    timerID = setTimeout(() => {\n      console.log(\"clearing\");\n      dispatch({\n        type: \"CLEAR_NOTIFICATION\"\n      });\n    }, timeout * 1000);\n    console.log(\"cleared\");\n    console.log(\"timerID\", timerID);\n    if (timerID) clearTimeout(timerID);\n  };\n};\nexport default notificationReducer;","map":{"version":3,"sources":["C:/Users/Koulu/Desktop/Fullstack/fullstack-websovelluskehitys2020/osa7/bloglist-frontend/src/reducers/notificationReducer.js"],"names":["initialState","notificationReducer","state","action","console","log","type","data","content","setNotification","timeout","dispatch","timerID","setTimeout","clearTimeout"],"mappings":"AAAA,MAAMA,YAAY,GAAG,IAArB;;AAEA,MAAMC,mBAAmB,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC5DC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAArB;;AACA,UAAQC,MAAM,CAACG,IAAf;AACE,SAAK,oBAAL;AACE,aAAO,EAAE,GAAGN;AAAL,OAAP;;AACF,SAAK,kBAAL;AACE,aAAOG,MAAM,CAACI,IAAP,CAAYC,OAAnB;;AACF;AACE,aAAON,KAAP;AANJ;AAQD,CAVD;;AAYA,OAAO,MAAMO,eAAe,GAAG,CAACD,OAAD,EAAUE,OAAV,KAAsB;AACnD,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAE,kBADC;AAEPC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AAFC,KAAD,CAAR;AAIA,QAAII,OAAJ;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBO,OAAvB;AACAA,IAAAA,OAAO,GAAGC,UAAU,CAAC,MAAM;AACzBT,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAM,MAAAA,QAAQ,CAAC;AACPL,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGD,KALmB,EAKjBI,OAAO,GAAG,IALO,CAApB;AAMAN,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBO,OAAvB;AACA,QAAIA,OAAJ,EAAaE,YAAY,CAACF,OAAD,CAAZ;AACd,GAhBD;AAiBD,CAlBM;AAoBP,eAAeX,mBAAf","sourcesContent":["const initialState = null\r\n\r\nconst notificationReducer = (state = initialState, action) => {\r\n  console.log(\"state\", state)\r\n  switch (action.type) {\r\n    case \"CLEAR_NOTIFICATION\":\r\n      return { ...initialState }\r\n    case \"NEW_NOTIFICATION\":\r\n      return action.data.content\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setNotification = (content, timeout) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: \"NEW_NOTIFICATION\",\r\n      data: { content }\r\n    })\r\n    var timerID\r\n    console.log(\"timerID\", timerID)\r\n    timerID = setTimeout(() => {\r\n      console.log(\"clearing\")\r\n      dispatch({\r\n        type: \"CLEAR_NOTIFICATION\"\r\n      })\r\n    }, timeout * 1000)\r\n    console.log(\"cleared\")\r\n    console.log(\"timerID\", timerID)\r\n    if (timerID) clearTimeout(timerID)\r\n  }\r\n}\r\n\r\nexport default notificationReducer\r\n"]},"metadata":{},"sourceType":"module"}