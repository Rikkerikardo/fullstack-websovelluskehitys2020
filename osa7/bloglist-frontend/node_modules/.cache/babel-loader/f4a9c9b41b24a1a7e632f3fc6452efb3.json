{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Koulu\\\\Desktop\\\\Fullstack\\\\fullstack-websovelluskehitys2020\\\\osa7\\\\bloglist-frontend\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport BlogList from \"./components/BlogList\";\nimport blogService from \"./services/blogs\";\nimport loginService from \"./services/login\";\nimport BlogForm from \"./components/BlogForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport Togglable from \"./components/Togglable\";\nimport Notification from \"./components/Notification\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setNotification } from \"./reducers/notificationReducer\";\nimport { initializeBlogs, setToken } from \"./reducers/blogReducer\";\nimport { logOut } from \"./reducers/loggedUserReducer\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  console.log(\"user\", user);\n  useEffect(() => {\n    dispatch(initializeBlogs());\n  }, [dispatch]);\n  useEffect(() => {\n    const loggedUser = user.isLoggedIn;\n\n    if (loggedUser) {\n      console.log(\"loggedUser\", loggedUser);\n      dispatch(setToken(user.token));\n    }\n  }, [dispatch]);\n  /*   useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogappUser\")\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, []) */\n\n  /*   const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username,\r\n        password\r\n      })\r\n      window.localStorage.setItem(\"loggedBlogappUser\", JSON.stringify(user))\r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername(\"\")\r\n      setPassword(\"\")\r\n    } catch (exception) {\r\n      dispatch(setNotification(\"wrong credentials\"))\r\n    }\r\n  }\r\n  */\n\n  const logout = () => {\n    dispatch(logOut);\n    console.log(\"user.username\", user.username);\n    /* window.localStorage.clear()\r\n        setUser(null)\r\n    setPassword(\"\") */\n  };\n\n  const blogForm = () => React.createElement(Togglable, {\n    buttonLabel: \"new blog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(BlogForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }));\n\n  const loginForm = () => React.createElement(Togglable, {\n    buttonLabel: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(LoginForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Blogs\"), React.createElement(Notification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Login\"), user.isLoggedIn == false ? loginForm() : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, user.name, \" logged in\", \" \", React.createElement(\"button\", {\n    onClick: () => logout(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"logout\")), blogForm(), React.createElement(BlogList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Koulu/Desktop/Fullstack/fullstack-websovelluskehitys2020/osa7/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","BlogList","blogService","loginService","BlogForm","LoginForm","Togglable","Notification","useDispatch","useSelector","setNotification","initializeBlogs","setToken","logOut","App","dispatch","user","state","console","log","loggedUser","isLoggedIn","token","logout","username","blogForm","loginForm","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,eAAT,EAA0BC,QAA1B,QAA0C,wBAA1C;AACA,SAASC,MAAT,QAAuB,8BAAvB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,IAAI,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,CAACJ,eAAe,EAAhB,CAAR;AACD,GAFQ,EAEN,CAACI,QAAD,CAFM,CAAT;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,UAAU,GAAGJ,IAAI,CAACK,UAAxB;;AACA,QAAID,UAAJ,EAAgB;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,UAA1B;AACAL,MAAAA,QAAQ,CAACH,QAAQ,CAACI,IAAI,CAACM,KAAN,CAAT,CAAR;AACD;AACF,GANQ,EAMN,CAACP,QAAD,CANM,CAAT;AAQA;;;;;;;;;AASA;;;;;;;;;;;;;;;;;;AAiBA,QAAMQ,MAAM,GAAG,MAAM;AACnBR,IAAAA,QAAQ,CAACF,MAAD,CAAR;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,IAAI,CAACQ,QAAlC;AACA;;;AAGD,GAND;;AAQA,QAAMC,QAAQ,GAAG,MACf,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;;AAMA,QAAMC,SAAS,GAAG,MAChB,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,EAMGV,IAAI,CAACK,UAAL,IAAmB,KAAnB,GACCK,SAAS,EADV,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,IAAI,CAACW,IADR,gBACwB,GADxB,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMJ,MAAM,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,EAMGE,QAAQ,EANX,EAOE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CATJ,CADF;AAsBD,CArFD;;AAuFA,eAAeX,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport BlogList from \"./components/BlogList\"\r\nimport blogService from \"./services/blogs\"\r\nimport loginService from \"./services/login\"\r\nimport BlogForm from \"./components/BlogForm\"\r\nimport LoginForm from \"./components/LoginForm\"\r\nimport Togglable from \"./components/Togglable\"\r\nimport Notification from \"./components/Notification\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { setNotification } from \"./reducers/notificationReducer\"\r\nimport { initializeBlogs, setToken } from \"./reducers/blogReducer\"\r\nimport { logOut } from \"./reducers/loggedUserReducer\"\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const user = useSelector((state) => state.user)\r\n  console.log(\"user\", user)\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeBlogs())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    const loggedUser = user.isLoggedIn\r\n    if (loggedUser) {\r\n      console.log(\"loggedUser\", loggedUser)\r\n      dispatch(setToken(user.token))\r\n    }\r\n  }, [dispatch])\r\n\r\n  /*   useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogappUser\")\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, []) */\r\n\r\n  /*   const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username,\r\n        password\r\n      })\r\n      window.localStorage.setItem(\"loggedBlogappUser\", JSON.stringify(user))\r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername(\"\")\r\n      setPassword(\"\")\r\n    } catch (exception) {\r\n      dispatch(setNotification(\"wrong credentials\"))\r\n    }\r\n  }\r\n */\r\n  const logout = () => {\r\n    dispatch(logOut)\r\n    console.log(\"user.username\", user.username)\r\n    /* window.localStorage.clear()\r\n        setUser(null)\r\n    setPassword(\"\") */\r\n  }\r\n\r\n  const blogForm = () => (\r\n    <Togglable buttonLabel=\"new blog\">\r\n      <BlogForm />\r\n    </Togglable>\r\n  )\r\n\r\n  const loginForm = () => (\r\n    <Togglable buttonLabel=\"login\">\r\n      <LoginForm />\r\n    </Togglable>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <h1>Blogs</h1>\r\n\r\n      <Notification />\r\n\r\n      <h2>Login</h2>\r\n      {user.isLoggedIn == false ? (\r\n        loginForm()\r\n      ) : (\r\n        <div>\r\n          <p>\r\n            {user.name} logged in{\" \"}\r\n            <button onClick={() => logout()}>logout</button>\r\n          </p>\r\n\r\n          {blogForm()}\r\n          <BlogList />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}