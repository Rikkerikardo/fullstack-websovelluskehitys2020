{"ast":null,"code":"const initialState = null;\n\nconst notificationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CLEAR_NOTIFICATION\":\n      return { ...initialState\n      };\n\n    case \"NEW_NOTIFICATION\":\n      return action.data.content;\n\n    default:\n      return state;\n  }\n};\n\nconsole.log(\"state\", state);\nexport const setNotification = (content, timeout) => {\n  return async dispatch => {\n    dispatch({\n      type: \"NEW_NOTIFICATION\",\n      data: {\n        content\n      }\n    });\n    var timerID;\n    timerID = setTimeout(() => {\n      dispatch({\n        type: \"CLEAR_NOTIFICATION\"\n      });\n    }, timeout * 1000);\n    if (timerID) clearTimeout(timerID);\n  };\n};\nexport default notificationReducer;","map":{"version":3,"sources":["C:/Users/Koulu/Desktop/Fullstack/fullstack-websovelluskehitys2020/osa7/bloglist-frontend/src/reducers/notificationReducer.js"],"names":["initialState","notificationReducer","state","action","type","data","content","console","log","setNotification","timeout","dispatch","timerID","setTimeout","clearTimeout"],"mappings":"AAAA,MAAMA,YAAY,GAAG,IAArB;;AAEA,MAAMC,mBAAmB,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,oBAAL;AACE,aAAO,EAAE,GAAGJ;AAAL,OAAP;;AACF,SAAK,kBAAL;AACE,aAAOG,MAAM,CAACE,IAAP,CAAYC,OAAnB;;AACF;AACE,aAAOJ,KAAP;AANJ;AAQD,CATD;;AAWAK,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,KAArB;AAEA,OAAO,MAAMO,eAAe,GAAG,CAACH,OAAD,EAAUI,OAAV,KAAsB;AACnD,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAE,kBADC;AAEPC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AAFC,KAAD,CAAR;AAIA,QAAIM,OAAJ;AACAA,IAAAA,OAAO,GAAGC,UAAU,CAAC,MAAM;AACzBF,MAAAA,QAAQ,CAAC;AACPP,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGD,KAJmB,EAIjBM,OAAO,GAAG,IAJO,CAApB;AAKA,QAAIE,OAAJ,EAAaE,YAAY,CAACF,OAAD,CAAZ;AACd,GAZD;AAaD,CAdM;AAgBP,eAAeX,mBAAf","sourcesContent":["const initialState = null\r\n\r\nconst notificationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CLEAR_NOTIFICATION\":\r\n      return { ...initialState }\r\n    case \"NEW_NOTIFICATION\":\r\n      return action.data.content\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconsole.log(\"state\", state)\r\n\r\nexport const setNotification = (content, timeout) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: \"NEW_NOTIFICATION\",\r\n      data: { content }\r\n    })\r\n    var timerID\r\n    timerID = setTimeout(() => {\r\n      dispatch({\r\n        type: \"CLEAR_NOTIFICATION\"\r\n      })\r\n    }, timeout * 1000)\r\n    if (timerID) clearTimeout(timerID)\r\n  }\r\n}\r\n\r\nexport default notificationReducer\r\n"]},"metadata":{},"sourceType":"module"}