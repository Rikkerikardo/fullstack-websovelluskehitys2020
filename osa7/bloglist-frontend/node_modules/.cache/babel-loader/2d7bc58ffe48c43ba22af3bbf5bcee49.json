{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Koulu\\\\Desktop\\\\Fullstack\\\\fullstack-websovelluskehitys2020\\\\osa5\\\\bloglist-frontend\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Blog from \"./components/Blog\";\nimport blogService from \"./services/blogs\";\nimport loginService from \"./services/login\";\nimport BlogForm from \"./components/BlogForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport Togglable from \"./components/Togglable\";\n\nconst App = () => {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [blogState, setBlogState] = useState(\"\");\n  const blogLikeRef = useRef();\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogappUser\");\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const Notification = ({\n    message\n  }) => {\n    if (message === null) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, message);\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem(\"loggedBlogappUser\", JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {\n      setErrorMessage(\"wrong credentials\");\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const addBlog = blogObject => {\n    blogService.create(blogObject).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog));\n      setMessage(`a new blog ${blogObject.title} by ${blogObject.author} added`);\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n    });\n  };\n\n  const logout = () => {\n    window.localStorage.clear();\n    setUser(null);\n    setPassword(\"\");\n  };\n\n  const blogForm = () => React.createElement(Togglable, {\n    buttonLabel: \"new blog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(BlogForm, {\n    createBlog: addBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n\n  const loginForm = () => React.createElement(Togglable, {\n    buttonLabel: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(LoginForm, {\n    username: username,\n    password: password,\n    handleUsernameChange: ({\n      target\n    }) => setUsername(target.value),\n    handlePasswordChange: ({\n      target\n    }) => setPassword(target.value),\n    handleSubmit: handleLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Blogs\"), React.createElement(Notification, {\n    message: errorMessage === null ? message : errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Login\"), user === null ? loginForm() : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, user.name, \" logged in\", \" \", React.createElement(\"button\", {\n    onClick: () => logout(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"logout\")), blogForm(), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"All blogs\"), blogs.sort((a, b) => b.likes - a.likes).map(blog => React.createElement(Blog, {\n    key: blog.id,\n    blog: blog,\n    ref: blogLikeRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Koulu/Desktop/Fullstack/fullstack-websovelluskehitys2020/osa5/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","useRef","Blog","blogService","loginService","BlogForm","LoginForm","Togglable","App","errorMessage","setErrorMessage","message","setMessage","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","blogState","setBlogState","blogLikeRef","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","Notification","handleLogin","event","preventDefault","login","setItem","stringify","exception","setTimeout","addBlog","blogObject","create","returnedBlog","concat","title","author","logout","clear","blogForm","loginForm","target","value","name","sort","a","b","likes","map","blog","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\"\r\nimport Blog from \"./components/Blog\"\r\nimport blogService from \"./services/blogs\"\r\nimport loginService from \"./services/login\"\r\nimport BlogForm from \"./components/BlogForm\"\r\nimport LoginForm from \"./components/LoginForm\"\r\nimport Togglable from \"./components/Togglable\"\r\n\r\nconst App = () => {\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [message, setMessage] = useState(null)\r\n  const [blogs, setBlogs] = useState([])\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [user, setUser] = useState(null)\r\n  const [blogState, setBlogState] = useState(\"\")\r\n  const blogLikeRef = useRef()\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then((blogs) => setBlogs(blogs))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogappUser\")\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    return <div className=\"error\">{message}</div>\r\n  }\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username,\r\n        password\r\n      })\r\n      window.localStorage.setItem(\"loggedBlogappUser\", JSON.stringify(user))\r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername(\"\")\r\n      setPassword(\"\")\r\n    } catch (exception) {\r\n      setErrorMessage(\"wrong credentials\")\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const addBlog = (blogObject) => {\r\n    blogService.create(blogObject).then((returnedBlog) => {\r\n      setBlogs(blogs.concat(returnedBlog))\r\n      setMessage(`a new blog ${blogObject.title} by ${blogObject.author} added`)\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    })\r\n  }\r\n\r\n  const logout = () => {\r\n    window.localStorage.clear()\r\n    setUser(null)\r\n    setPassword(\"\")\r\n  }\r\n\r\n  const blogForm = () => (\r\n    <Togglable buttonLabel=\"new blog\">\r\n      <BlogForm createBlog={addBlog} />\r\n    </Togglable>\r\n  )\r\n\r\n  const loginForm = () => (\r\n    <Togglable buttonLabel=\"login\">\r\n      <LoginForm\r\n        username={username}\r\n        password={password}\r\n        handleUsernameChange={({ target }) => setUsername(target.value)}\r\n        handlePasswordChange={({ target }) => setPassword(target.value)}\r\n        handleSubmit={handleLogin}\r\n      />\r\n    </Togglable>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <h1>Blogs</h1>\r\n\r\n      <Notification message={errorMessage === null ? message : errorMessage} />\r\n\r\n      <h2>Login</h2>\r\n      {user === null ? (\r\n        loginForm()\r\n      ) : (\r\n        <div>\r\n          <p>\r\n            {user.name} logged in{\" \"}\r\n            <button onClick={() => logout()}>logout</button>\r\n          </p>\r\n\r\n          {blogForm()}\r\n\r\n          <h2>All blogs</h2>\r\n          {blogs\r\n            .sort((a, b) => b.likes - a.likes)\r\n            .map((blog) => (\r\n              <Blog key={blog.id} blog={blog} ref={blogLikeRef} />\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}